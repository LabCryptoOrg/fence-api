/******************************************************************
 * Generated by Hottentot JAVA Generator
 * Date: 
 * Name: 
 * Description:
 *   This file contains definition of an abstract service class.
 ******************************************************************/
package org.labcrypto.fence;

import org.labcrypto.hottentot.helper.PDTDeserializer;
import org.labcrypto.hottentot.helper.PDTSerializer;


public enum MessageStatus {

  Empty(),
  Unknown((short) 0),
  EnqueuedForTransmission((short) 100),
  Transmitted((short) 101),
  TransmissionFailed((short) 102),
  ReadyForPop((short) 103),
  PoppedButNotAcked((short) 104),
  PoppedAndAcked((short) 105);	

  private short value;

  MessageStatus() {}

  MessageStatus(short value) {
    this.value = value;
  }

  public short getValue() {
    return value;
  }

  public void setValue(short value) {
    this.value = value;
  }

  public byte[] serialize() {
    return PDTSerializer.getInt16(value);
  }
  
  public static MessageStatus deserialize(byte[] bytes){
    short value = PDTDeserializer.getInt16(bytes);
    if(value == 0){
      return MessageStatus.Unknown;
    }
    if(value == 100){
      return MessageStatus.EnqueuedForTransmission;
    }
    if(value == 101){
      return MessageStatus.Transmitted;
    }
    if(value == 102){
      return MessageStatus.TransmissionFailed;
    }
    if(value == 103){
      return MessageStatus.ReadyForPop;
    }
    if(value == 104){
      return MessageStatus.PoppedButNotAcked;
    }
    if(value == 105){
      return MessageStatus.PoppedAndAcked;
    }

    return null;
  }

}