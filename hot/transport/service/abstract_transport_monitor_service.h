/******************************************************************
 * Generated by Hottentot CC Generator
 * Date: 02-04-2016 10:40:06
 * Name: transport_monitor_service.h
 * Description:
 *   This file contains definition of an abstract service class.
 ******************************************************************/

#ifndef _IR_NTNAEEM_GATE_TRANSPORT__SERVICE__ABSTRACT_TRANSPORT_MONITOR_SERVICE_H_
#define _IR_NTNAEEM_GATE_TRANSPORT__SERVICE__ABSTRACT_TRANSPORT_MONITOR_SERVICE_H_

#ifdef _MSC_VER
typedef __int8 int8_t;
typedef unsigned __int8 uint8_t;
typedef __int16 int16_t;
typedef unsigned __int16 uint16_t;
typedef __int32 int32_t;
typedef unsigned __int32 uint32_t;
typedef __int64 int64_t;
typedef unsigned __int64 uint64_t;
#else
#include <stdint.h>
#endif

#include <string>

#include <naeem/hottentot/runtime/service/service.h>

#include "../enqueue_report.h"
#include "../transport_message.h"

#include "transport_monitor_service.h"
#include "transport_monitor_service_request_handler.h"
#include "../enums.h"


namespace ir {
namespace ntnaeem {
namespace gate {
namespace transport {
namespace service {
  class AbstractTransportMonitorService : public TransportMonitorService, public ::naeem::hottentot::runtime::service::Service {
  public:
    AbstractTransportMonitorService() {}
    virtual ~AbstractTransportMonitorService() {}
  public:
    inline virtual uint32_t GetServiceId() const {
      return 3319016240;
    }
  protected:
    inline virtual ::naeem::hottentot::runtime::service::RequestHandler* MakeRequestHandler() {
      return new TransportMonitorServiceRequestHandler(this);
    }
  };
} // END OF NAMESPACE service
} // END OF NAMESPACE transport
} // END OF NAMESPACE gate
} // END OF NAMESPACE ntnaeem
} // END OF NAMESPACE ir

#endif